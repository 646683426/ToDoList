{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vscode\\\\workspace\\\\to_do_list\\\\src\\\\component\\\\ToDoList.js\";\nimport React from 'react';\nimport '../style/ToDoList.css';\n\nclass ToDo extends React.Component {\n  render() {\n    let toDo = this.props.toDo;\n    toDo = toDo.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"to-do\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check-box\",\n          tindex: item.id + '' + index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.haveDone(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            this.props.change(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          tindex: item.id + '' + index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, item.id + item.title.toString() + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"do-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: toDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Done extends React.Component {\n  render() {\n    let done = this.props.done;\n    done = done.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"done\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: true,\n          className: \"check-box\",\n          dindex: item.id + '' + index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.doing(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            this.props.change(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          defaultChecked: \"true\",\n          dindex: item.id + '' + index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, item.id + '' + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"done-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toDo: [],\n      done: []\n    };\n\n    this.setToDo = () => {\n      localStorage.setItem('toDo', JSON.stringify(this.state.toDo));\n    };\n\n    this.setDone = () => {\n      localStorage.setItem('done', JSON.stringify(this.state.done));\n    };\n\n    this.toDo = e => {\n      console.log(this.state.toDo);\n      let id = this.state.toDo.map(item => {\n        for (let i = 0, len = this.state.toDo.length; i < len; i++) {\n          if (item.id !== i) {\n            return i;\n          }\n        }\n      });\n\n      if (e.code === 'Enter') {\n        if (e.target.value.length === 0) {\n          alert('内容不能为空');\n        } else {\n          this.setState({\n            toDo: [{\n              id: this.state.toDo.length,\n              title: e.target.value\n            }, ...this.state.toDo]\n          }, () => {\n            this.setToDo();\n          });\n          e.target.value = '';\n        }\n      }\n    };\n\n    this.change = e => {\n      const index = e.target.getAttribute('index');\n      let list = this;\n      let text = this.state.toDo[index].title;\n      let id = this.state.toDo[index].id;\n\n      if (e.target && e.target.nodeName === 'P') {\n        e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\n      }\n\n      const input = document.getElementById('input');\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n\n      input.onblur = function () {\n        if (input.value.length === 0) {\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\n          alert(\"内容不能为空\");\n        } else {\n          list.state.toDo.splice([index], 1, {\n            id: id,\n            title: input.value\n          });\n          list.setState({\n            toDo: list.state.toDo\n          }, () => {\n            list.setToDo();\n          });\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\n        }\n      }; // console.log(this.toDoRef.current.toDoRef.current.innerHTML)\n      // const index = e.target.getAttribute('index');\n      // const text = this.state.toDo[index].title;\n      // this.setState(\n      //     {\n      //         click: !this.state.click,\n      //         text: this.state.toDo[index].title\n      //     },\n      //     () => {\n      //         console.log(this.state)\n      // if (this.state.click) {\n      //     return (\n      //         this.toDoRef.current.toDoRef.current.innerHTML = \"<input ref={this.inputRef} value=\"+this.state.text+ \" index=\"+index+\" />\"\n      //     )\n      // } else{\n      //     return(\n      //         this.toDoRef.current.toDoRef.current.innerHTML = \"<p>\"+this.state.text+\"</p>\"\n      //     )\n      // }\n      //     }\n      // )\n\n    };\n\n    this.doneChange = e => {\n      const index = e.target.getAttribute('index');\n      let list = this;\n      let text = this.state.done[index].title;\n      let id = this.state.done[index].id;\n\n      if (e.target && e.target.nodeName === 'P') {\n        e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\n      }\n\n      const input = document.getElementById('input');\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n\n      input.onblur = function () {\n        if (input.value.length === 0) {\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\n          alert(\"内容不能为空\");\n        } else {\n          list.state.done.splice([index], 1, {\n            id: id,\n            title: input.value\n          });\n          list.setState({\n            done: list.state.done\n          }, () => {\n            console.log(list.state);\n            list.setDone();\n          });\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\n        }\n      };\n    };\n\n    this.haveDone = e => {\n      this.setState({\n        done: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.done]\n      }, () => {\n        this.setDone();\n      });\n      this.remove(e);\n    };\n\n    this.doing = e => {\n      this.setState({\n        toDo: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.toDo]\n      }, () => {\n        this.setToDo();\n      });\n      this.remove(e);\n    };\n\n    this.remove = e => {\n      e.target.getAttribute('tindex') !== null ? this.setState({\n        del: this.state.toDo.splice(e.target.getAttribute('tindex')[1], 1)\n      }, () => {\n        this.setToDo();\n      }) : this.setState({\n        del: this.state.done.splice(e.target.getAttribute('dindex')[1], 1)\n      }, () => {\n        this.setDone();\n      });\n    };\n\n    this.clean = () => {\n      localStorage.setItem('toDo', JSON.stringify([]));\n      localStorage.setItem('done', JSON.stringify([]));\n      this.setState({\n        toDo: [],\n        done: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\n      done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"ToDoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\\u5E76\\u6309\\u4E0B\\u56DE\\u8F66\\u6DFB\\u52A0ToDo\",\n          onKeyDown: e => {\n            this.toDo(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(ToDo, {\n          toDo: this.state.toDo,\n          remove: this.remove,\n          haveDone: this.haveDone,\n          change: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6B63\\u5728\\u8FDB\\u884C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"to-do-count\",\n            children: this.state.toDo.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Done, {\n          done: this.state.done,\n          remove: this.remove,\n          doing: this.doing,\n          change: this.doneChange,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"done-count\",\n            children: this.state.done.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean\",\n          onClick: this.clean,\n          children: \"\\u6E05\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/vscode/workspace/to_do_list/src/component/ToDoList.js"],"names":["React","ToDo","Component","render","toDo","props","map","item","index","id","e","haveDone","change","title","remove","toString","children","Done","done","doing","ToDoList","state","setToDo","localStorage","setItem","JSON","stringify","setDone","console","log","i","len","length","code","target","value","alert","setState","getAttribute","list","text","nodeName","parentNode","innerHTML","input","document","getElementById","focus","setSelectionRange","onblur","splice","doneChange","getElementsByTagName","del","clean","componentDidMount","getItem","parse"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/ToDoList.css';\r\n\r\nclass ToDo extends React.Component {\r\n\r\n    render() {\r\n        let toDo = this.props.toDo;\r\n        toDo = toDo.map((item, index) => {\r\n            return (\r\n                <li\r\n                    key={item.id + item.title.toString() + index} className='to-do'>\r\n                    <input\r\n                        className='check-box'\r\n                        tindex={item.id + '' + index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.haveDone(e) }} />\r\n                    <span\r\n                        onClick={(e) => { this.props.change(e) }}>\r\n                        <p\r\n                            index={index}>\r\n                            {item.title}\r\n                        </p>\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        tindex={item.id + '' + index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='do-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {toDo}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Done extends React.Component {\r\n    render() {\r\n        let done = this.props.done\r\n        done = done.map((item, index) => {\r\n            return (\r\n                <li key={item.id + '' + index} className='done'>\r\n                    <input\r\n                        checked\r\n                        className='check-box'\r\n                        dindex={item.id + '' + index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.doing(e) }} />\r\n                    <span\r\n                        onClick={(e) => { this.props.change(e) }}>\r\n                        <p\r\n                            index={index}>\r\n                            {item.title}\r\n                        </p>\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        defaultChecked='true'\r\n                        dindex={item.id + '' + index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='done-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {done}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class ToDoList extends React.Component {\r\n\r\n    state = {\r\n        toDo: [],\r\n        done: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\r\n            done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <span className='title'>ToDoList</span>\r\n                    <input\r\n                        placeholder='输入内容并按下回车添加ToDo'\r\n                        onKeyDown={(e) => { this.toDo(e) }} />\r\n                </header>\r\n                <main>\r\n                    <ToDo\r\n                        toDo={this.state.toDo}\r\n                        remove={this.remove}\r\n                        haveDone={this.haveDone}\r\n                        change={this.change}>\r\n                        <span>正在进行:</span>\r\n                        <span className='to-do-count'>{this.state.toDo.length}</span>\r\n                    </ToDo>\r\n                    <Done\r\n                        done={this.state.done}\r\n                        remove={this.remove}\r\n                        doing={this.doing}\r\n                        change={this.doneChange}>\r\n                        <span>已经完成:</span>\r\n                        <span className='done-count'>{this.state.done.length}</span>\r\n                    </Done>\r\n                </main>\r\n                <footer>\r\n                    <button\r\n                        className='clean'\r\n                        onClick={this.clean}>\r\n                        清除\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setToDo = () => {\r\n        localStorage.setItem('toDo', JSON.stringify(this.state.toDo))\r\n    }\r\n\r\n    setDone = () => {\r\n        localStorage.setItem('done', JSON.stringify(this.state.done))\r\n    }\r\n\r\n    toDo = (e) => {\r\n        console.log(this.state.toDo)\r\n        let id = this.state.toDo.map((item)=>{\r\n            for(let i = 0,len = this.state.toDo.length;i<len;i++){\r\n                if(item.id !== i){\r\n                    return i\r\n                }\r\n            }\r\n        })\r\n        if (e.code === 'Enter') {\r\n            if (e.target.value.length === 0) {\r\n                alert('内容不能为空')\r\n            } else {\r\n                this.setState(\r\n                    {\r\n                        toDo: [{ id: this.state.toDo.length, title: e.target.value }, ...this.state.toDo]\r\n                    },\r\n                    () => {\r\n                        this.setToDo()\r\n                    }\r\n                )\r\n                e.target.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    change = (e) => {\r\n        const index = e.target.getAttribute('index');\r\n        let list = this;\r\n        let text = this.state.toDo[index].title;\r\n        let id = this.state.toDo[index].id\r\n        if (e.target && e.target.nodeName === 'P') {\r\n            e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\r\n        }\r\n        const input = document.getElementById('input');\r\n        input.focus();\r\n        input.setSelectionRange(0, input.value.length);\r\n        input.onblur = function () {\r\n            if (input.value.length === 0) {\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\r\n                alert(\"内容不能为空\");\r\n            }\r\n            else {\r\n                list.state.toDo.splice([index], 1, { id: id, title: input.value })\r\n                list.setState(\r\n                    {\r\n                        toDo: list.state.toDo\r\n                    },\r\n                    () => {\r\n                        list.setToDo();\r\n                    }\r\n                )\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\r\n            }\r\n        };\r\n        // console.log(this.toDoRef.current.toDoRef.current.innerHTML)\r\n        // const index = e.target.getAttribute('index');\r\n        // const text = this.state.toDo[index].title;\r\n        // this.setState(\r\n        //     {\r\n        //         click: !this.state.click,\r\n        //         text: this.state.toDo[index].title\r\n        //     },\r\n        //     () => {\r\n        //         console.log(this.state)\r\n        // if (this.state.click) {\r\n        //     return (\r\n        //         this.toDoRef.current.toDoRef.current.innerHTML = \"<input ref={this.inputRef} value=\"+this.state.text+ \" index=\"+index+\" />\"\r\n        //     )\r\n        // } else{\r\n        //     return(\r\n        //         this.toDoRef.current.toDoRef.current.innerHTML = \"<p>\"+this.state.text+\"</p>\"\r\n        //     )\r\n        // }\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    doneChange = (e) => {\r\n        const index = e.target.getAttribute('index');\r\n        let list = this;\r\n        let text = this.state.done[index].title;\r\n        let id = this.state.done[index].id\r\n        if (e.target && e.target.nodeName === 'P') {\r\n            e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\r\n        }\r\n        const input = document.getElementById('input');\r\n        input.focus();\r\n        input.setSelectionRange(0, input.value.length);\r\n        input.onblur = function () {\r\n            if (input.value.length === 0) {\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\r\n                alert(\"内容不能为空\");\r\n            }\r\n            else {\r\n                list.state.done.splice([index], 1, { id: id, title: input.value })\r\n                list.setState(\r\n                    {\r\n                        done: list.state.done\r\n                    },\r\n                    () => {\r\n                        console.log(list.state)\r\n                        list.setDone();\r\n                    }\r\n                )\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\r\n            }\r\n        };\r\n    }\r\n\r\n    haveDone = (e) => {\r\n        this.setState(\r\n            {\r\n                done: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.done],\r\n            },\r\n            () => {\r\n                this.setDone();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    doing = (e) => {\r\n        this.setState(\r\n            {\r\n                toDo: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.toDo],\r\n            },\r\n            () => {\r\n                this.setToDo();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    remove = (e) => {\r\n        e.target.getAttribute('tindex') !== null ?\r\n            this.setState(\r\n                {\r\n                    del: this.state.toDo.splice(e.target.getAttribute('tindex')[1], 1)\r\n                },\r\n                () => {\r\n                    this.setToDo();\r\n                }\r\n            )\r\n            : this.setState(\r\n                {\r\n                    del: this.state.done.splice(e.target.getAttribute('dindex')[1], 1)\r\n                },\r\n                () => {\r\n                    this.setDone();\r\n                }\r\n            )\r\n    }\r\n\r\n    clean = () => {\r\n        localStorage.setItem('toDo', JSON.stringify([]));\r\n        localStorage.setItem('done', JSON.stringify([]));\r\n        this.setState({\r\n            toDo: [],\r\n            done: []\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}