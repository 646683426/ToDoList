{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vscode\\\\workspace\\\\to_do_list\\\\to-do-list\\\\src\\\\component\\\\ToDoList.js\";\nimport React from 'react';\nimport '../style/ToDoList.css';\n\nclass List extends React.Component {\n  render() {\n    let {\n      list,\n      changeState,\n      onBlur,\n      onClick,\n      remove,\n      state,\n      liClass,\n      divClass,\n      defaultChecked\n    } = this.props;\n    list = list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: liClass,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check-box\",\n          index: state + index,\n          type: \"checkbox\",\n          state: state,\n          defaultChecked: defaultChecked,\n          onClick: e => {\n            changeState(e, state);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: item.isClick ? /*#__PURE__*/_jsxDEV(\"input\", {\n            index: state + index,\n            id: \"input\",\n            defaultValue: item.title,\n            autoFocus: true,\n            onBlur: e => {\n              onBlur(e, state);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: e => {\n              onClick(e, state);\n            },\n            index: state + index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          index: state + index,\n          state: state,\n          onClick: e => {\n            remove(e, state);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: divClass,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.toDoRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      toDo: [],\n      done: []\n    };\n\n    this.setToDo = () => {\n      localStorage.setItem('toDo', JSON.stringify(this.state.toDo));\n    };\n\n    this.setDone = () => {\n      localStorage.setItem('done', JSON.stringify(this.state.done));\n    };\n\n    this.toDo = e => {\n      let id = Date.now();\n\n      if (e.code === 'Enter') {\n        if (e.target.value.length === 0) {\n          alert('内容不能为空');\n        } else {\n          this.setState({\n            toDo: [{\n              id: id,\n              title: e.target.value,\n              isClick: false\n            }, ...this.state.toDo]\n          }, () => {\n            this.setToDo();\n          });\n          e.target.value = '';\n        }\n      }\n    };\n\n    this.change = (e, state) => {\n      const index = e.target.getAttribute('index').slice(4);\n\n      if (state === 'toDo') {\n        let toDo = this.state.toDo;\n        toDo[index].isClick = !toDo[index].isClick;\n        this.setState({\n          toDo: toDo\n        });\n      } else {\n        let done = this.state.done;\n        done[index].isClick = !done[index].isClick;\n        this.setState({\n          done: done\n        });\n      }\n    };\n\n    this.changeDone = (e, state) => {\n      const index = e.target.getAttribute('index').slice(4);\n      let list;\n\n      if (state === 'toDo') {\n        list = this.state.toDo;\n      } else {\n        list = this.state.done;\n      }\n\n      let isClick = list[index].isClick;\n      let id = list[index].id;\n      let text;\n\n      if (e.target.value.length === 0) {\n        text = list[index].title;\n        alert('内容不能为空');\n        list.splice([index], 1, {\n          id: id,\n          title: text,\n          isClick: !isClick\n        });\n        list === this.state.toDo ? this.setState({\n          toDo: list\n        }) : this.setState({\n          done: list\n        });\n      } else {\n        text = e.target.value;\n        list.splice([index], 1, {\n          id: id,\n          title: text,\n          isClick: !isClick\n        });\n        list === this.state.toDo ? this.setState({\n          toDo: list\n        }, () => {\n          this.setToDo();\n        }) : this.setState({\n          done: list\n        }, () => {\n          this.setDone();\n        });\n      }\n    };\n\n    this.changeState = (e, state) => {\n      let id = Date.now();\n\n      if (state === 'toDo') {\n        this.setState({\n          done: [{\n            id: id,\n            title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n          }, ...this.state.done]\n        }, () => {\n          this.setDone();\n        });\n        this.remove(e, state);\n      } else {\n        this.setState({\n          toDo: [{\n            id: id,\n            title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n          }, ...this.state.toDo]\n        }, () => {\n          this.setToDo();\n        });\n        this.remove(e, state);\n      }\n    };\n\n    this.remove = (e, state) => {\n      let index = e.target.getAttribute('index').slice(4);\n      state === 'toDo' ? this.setState({\n        del: this.state.toDo.splice(index, 1)\n      }, () => {\n        this.setToDo();\n      }) : this.setState({\n        del: this.state.done.splice(index, 1)\n      }, () => {\n        this.setDone();\n      });\n    };\n\n    this.clean = () => {\n      localStorage.setItem('toDo', JSON.stringify([]));\n      localStorage.setItem('done', JSON.stringify([]));\n      this.setState({\n        toDo: [],\n        done: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    //在缓存中获取任务\n    this.setState({\n      toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\n      done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"ToDoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\\u5E76\\u6309\\u4E0B\\u56DE\\u8F66\\u6DFB\\u52A0ToDo\",\n          onKeyDown: e => {\n            this.toDo(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          list: this.state.toDo,\n          remove: this.remove,\n          changeState: this.changeState,\n          state: 'toDo',\n          liClass: 'to-do',\n          divClass: 'do-content',\n          onBlur: this.changeDone,\n          onClick: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6B63\\u5728\\u8FDB\\u884C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"to-do-count\",\n            children: this.state.toDo.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          list: this.state.done,\n          remove: this.remove,\n          changeState: this.changeState,\n          state: 'done',\n          liClass: 'done',\n          divClass: 'done-content',\n          defaultChecked: 'true',\n          onBlur: this.changeDone,\n          onClick: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"done-count\",\n            children: this.state.done.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean\",\n          onClick: this.clean,\n          children: \"\\u6E05\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  } //向浏览器缓存添加任务\n\n\n}","map":{"version":3,"sources":["D:/vscode/workspace/to_do_list/to-do-list/src/component/ToDoList.js"],"names":["React","List","Component","render","list","changeState","onBlur","onClick","remove","state","liClass","divClass","defaultChecked","props","map","item","index","e","isClick","title","id","children","ToDoList","toDoRef","createRef","toDo","done","setToDo","localStorage","setItem","JSON","stringify","setDone","Date","now","code","target","value","length","alert","setState","change","getAttribute","slice","changeDone","text","splice","parentNode","getElementsByTagName","innerHTML","del","clean","componentDidMount","getItem","parse"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/ToDoList.css';\r\n\r\nclass List extends React.Component {\r\n    render() {\r\n        let { list, changeState, onBlur, onClick, remove, state, liClass, divClass,defaultChecked } = this.props;\r\n        list = list.map((item, index) => {\r\n            return (\r\n                <li\r\n                    key={item.id} className={liClass}>\r\n                    <input\r\n                        className='check-box'\r\n                        index={state + index}\r\n                        type='checkbox'\r\n                        state={state}\r\n                        defaultChecked={defaultChecked}\r\n                        onClick={(e) => { changeState(e, state) }} />\r\n                    <span\r\n                        className='span'>\r\n                        {item.isClick ?\r\n                            <input\r\n                                index={state + index}\r\n                                id='input'\r\n                                defaultValue={item.title}\r\n                                autoFocus\r\n                                onBlur={(e) => { onBlur(e, state) }}\r\n                            />\r\n                            :\r\n                            <p\r\n                                onClick={(e) => { onClick(e, state) }}\r\n                                index={state + index}>\r\n                                {item.title}\r\n                            </p>\r\n                        }\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        index={state + index}\r\n                        state={state}\r\n                        onClick={(e) => { remove(e, state) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className={divClass}>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class ToDoList extends React.Component {\r\n\r\n    toDoRef = React.createRef();\r\n\r\n    state = {\r\n        toDo: [],\r\n        done: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        //在缓存中获取任务\r\n        this.setState({\r\n            toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\r\n            done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <span className='title'>ToDoList</span>\r\n                    <input\r\n                        placeholder='输入内容并按下回车添加ToDo'\r\n                        onKeyDown={(e) => { this.toDo(e) }} />\r\n                </header>\r\n                <main>\r\n                    <List\r\n                        list={this.state.toDo}\r\n                        remove={this.remove}\r\n                        changeState={this.changeState}\r\n                        state={'toDo'}\r\n                        liClass={'to-do'}\r\n                        divClass={'do-content'}\r\n                        onBlur={this.changeDone}\r\n                        onClick={this.change}>\r\n                        <span>正在进行:</span>\r\n                        <span className='to-do-count'>{this.state.toDo.length}</span>\r\n                    </List>\r\n                    <List\r\n                        list={this.state.done}\r\n                        remove={this.remove}\r\n                        changeState={this.changeState}\r\n                        state={'done'}\r\n                        liClass={'done'}\r\n                        divClass={'done-content'}\r\n                        defaultChecked={'true'}\r\n                        onBlur={this.changeDone}\r\n                        onClick={this.change}>\r\n                        <span>已经完成:</span>\r\n                        <span className='done-count'>{this.state.done.length}</span>\r\n                    </List>\r\n                </main>\r\n                <footer>\r\n                    <button\r\n                        className='clean'\r\n                        onClick={this.clean}>\r\n                        清除\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //向浏览器缓存添加任务\r\n    setToDo = () => {\r\n        localStorage.setItem('toDo', JSON.stringify(this.state.toDo))\r\n    }\r\n\r\n    setDone = () => {\r\n        localStorage.setItem('done', JSON.stringify(this.state.done))\r\n    }\r\n\r\n    // 按下回车后，添加进行任务\r\n    toDo = (e) => {\r\n        let id = Date.now();\r\n        if (e.code === 'Enter') {\r\n            if (e.target.value.length === 0) {\r\n                alert('内容不能为空')\r\n            } else {\r\n                this.setState(\r\n                    {\r\n                        toDo: [{ id: id, title: e.target.value, isClick: false }, ...this.state.toDo]\r\n                    },\r\n                    () => {\r\n                        this.setToDo()\r\n                    }\r\n                )\r\n                e.target.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点击进行修改\r\n    change = (e, state) => {\r\n        const index = e.target.getAttribute('index').slice(4);\r\n        if (state === 'toDo') {\r\n            let toDo = this.state.toDo;\r\n            toDo[index].isClick = !toDo[index].isClick;\r\n            this.setState({\r\n                toDo: toDo\r\n            })\r\n        } else {\r\n            let done = this.state.done;\r\n            done[index].isClick = !done[index].isClick;\r\n            this.setState({\r\n                done: done\r\n            })\r\n        }\r\n    }\r\n\r\n    //完成修改\r\n    changeDone = (e, state) => {\r\n        const index = e.target.getAttribute('index').slice(4);\r\n        let list;\r\n        if (state === 'toDo') {\r\n            list = this.state.toDo\r\n        } else {\r\n            list = this.state.done\r\n        }\r\n        let isClick = list[index].isClick;\r\n        let id = list[index].id;\r\n        let text;\r\n        if (e.target.value.length === 0) {\r\n            text = list[index].title;\r\n            alert('内容不能为空')\r\n            list.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n            list === this.state.toDo ?\r\n                this.setState({\r\n                    toDo: list\r\n                }) :\r\n                this.setState({\r\n                    done: list\r\n                })\r\n        } else {\r\n            text = e.target.value;\r\n            list.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n            list === this.state.toDo ?\r\n                this.setState(\r\n                    {\r\n                        toDo: list\r\n                    },\r\n                    () => {\r\n                        this.setToDo();\r\n                    }\r\n                ) :\r\n                this.setState(\r\n                    {\r\n                        done: list\r\n                    },\r\n                    () => {\r\n                        this.setDone();\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    //更改任务完成状态\r\n    changeState = (e, state) => {\r\n        let id = Date.now();\r\n        if (state === 'toDo') {\r\n            this.setState(\r\n                {\r\n                    done: [{ id: id, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.done],\r\n                },\r\n                () => {\r\n                    this.setDone();\r\n                }\r\n            )\r\n            this.remove(e, state);\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    toDo: [{ id: id, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.toDo],\r\n                },\r\n                () => {\r\n                    this.setToDo();\r\n                }\r\n            )\r\n            this.remove(e, state);\r\n        }\r\n    }\r\n\r\n    // 删除单个任务\r\n    remove = (e, state) => {\r\n        let index = e.target.getAttribute('index').slice(4);\r\n        state === 'toDo' ?\r\n            this.setState(\r\n                {\r\n                    del: this.state.toDo.splice(index, 1)\r\n                },\r\n                () => {\r\n                    this.setToDo();\r\n                }\r\n            )\r\n            : this.setState(\r\n                {\r\n                    del: this.state.done.splice(index, 1)\r\n                },\r\n                () => {\r\n                    this.setDone();\r\n                }\r\n            )\r\n    }\r\n\r\n    //清除所有任务\r\n    clean = () => {\r\n        localStorage.setItem('toDo', JSON.stringify([]));\r\n        localStorage.setItem('done', JSON.stringify([]));\r\n        this.setState({\r\n            toDo: [],\r\n            done: []\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}