{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vscode\\\\workspace\\\\to_do_list\\\\to-do-list\\\\src\\\\component\\\\ToDoList.js\";\nimport React from 'react';\nimport '../style/ToDoList.css';\n\nclass ToDo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    let toDo = this.props.toDo;\n    toDo = toDo.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"to-do\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check-box\",\n          tindex: index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.haveDone(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\" // ref={this.input}\n          ,\n          onClick: e => {\n            this.props.change(e);\n          },\n          children: item.isClick ? /*#__PURE__*/_jsxDEV(\"input\", {\n            index: index,\n            id: \"input\",\n            defaultValue: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          tindex: index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"do-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: toDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Done extends React.Component {\n  render() {\n    let done = this.props.done;\n    done = done.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"done\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          className: \"check-box\",\n          dindex: index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.doing(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          onClick: e => {\n            this.props.change(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          defaultChecked: \"true\",\n          dindex: index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"done-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ref = /*#__PURE__*/React.createRef();\n    this.state = {\n      toDo: [],\n      done: []\n    };\n\n    this.setToDo = () => {\n      localStorage.setItem('toDo', JSON.stringify(this.state.toDo));\n    };\n\n    this.setDone = () => {\n      localStorage.setItem('done', JSON.stringify(this.state.done));\n    };\n\n    this.toDo = e => {\n      let id = Date.now();\n\n      if (e.code === 'Enter') {\n        if (e.target.value.length === 0) {\n          alert('内容不能为空');\n        } else {\n          this.setState({\n            toDo: [{\n              id: id,\n              title: e.target.value,\n              isClick: false\n            }, ...this.state.toDo]\n          }, () => {\n            this.setToDo();\n          });\n          e.target.value = '';\n        }\n      }\n    };\n\n    this.change = e => {\n      const index = e.target.getAttribute('index'); // let list = this;\n\n      console.log();\n      let text = this.state.toDo[index].title;\n      let id = this.state.toDo[index].id;\n      this.state.toDo[index].isClick = !this.state.toDo[index].isClick; // if (e.target && e.target.nodeName === 'P') {\n      //     e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\n      // }\n      // const input = document.getElementById('input');\n      // input.focus();\n      // input.setSelectionRange(0, input.value.length);\n      // input.onblur = function () {\n      //     if (input.value.length === 0) {\n      //         input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\n      //         alert(\"内容不能为空\");\n      //     }\n      //     else {\n      //         list.state.toDo.splice([index], 1, { id: id, title: input.value })\n      //         list.setState(\n      //             {\n      //                 toDo: list.state.toDo\n      //             },\n      //             () => {\n      //                 list.setToDo();\n      //             }\n      //         )\n      //         input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\n      //     }\n      // };\n    };\n\n    this.doneChange = e => {\n      const index = e.target.getAttribute('index');\n      let list = this;\n      let text = this.state.done[index].title;\n      let id = this.state.done[index].id;\n\n      if (e.target && e.target.nodeName === 'P') {\n        e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\n      }\n\n      const input = document.getElementById('input');\n      input.focus();\n      input.setSelectionRange(0, input.value.length);\n\n      input.onblur = function () {\n        if (input.value.length === 0) {\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\n          alert(\"内容不能为空\");\n        } else {\n          list.state.done.splice([index], 1, {\n            id: id,\n            title: input.value\n          });\n          list.setState({\n            done: list.state.done\n          }, () => {\n            list.setDone();\n          });\n          input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\n        }\n      };\n    };\n\n    this.haveDone = e => {\n      this.setState({\n        done: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.done]\n      }, () => {\n        this.setDone();\n      });\n      this.remove(e);\n    };\n\n    this.doing = e => {\n      this.setState({\n        toDo: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.toDo]\n      }, () => {\n        this.setToDo();\n      });\n      this.remove(e);\n    };\n\n    this.remove = e => {\n      e.target.getAttribute('tindex') !== null ? this.setState({\n        del: this.state.toDo.splice(e.target.getAttribute('tindex'), 1)\n      }, () => {\n        this.setToDo();\n      }) : this.setState({\n        del: this.state.done.splice(e.target.getAttribute('dindex'), 1)\n      }, () => {\n        this.setDone();\n      });\n    };\n\n    this.clean = () => {\n      localStorage.setItem('toDo', JSON.stringify([]));\n      localStorage.setItem('done', JSON.stringify([]));\n      this.setState({\n        toDo: [],\n        done: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\n      done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"ToDoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\\u5E76\\u6309\\u4E0B\\u56DE\\u8F66\\u6DFB\\u52A0ToDo\",\n          onKeyDown: e => {\n            this.toDo(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(ToDo, {\n          toDo: this.state.toDo,\n          remove: this.remove,\n          haveDone: this.haveDone // ref={this.input}\n          ,\n          change: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6B63\\u5728\\u8FDB\\u884C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"to-do-count\",\n            children: this.state.toDo.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Done, {\n          done: this.state.done,\n          remove: this.remove,\n          doing: this.doing,\n          change: this.doneChange,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"done-count\",\n            children: this.state.done.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean\",\n          onClick: this.clean,\n          children: \"\\u6E05\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/vscode/workspace/to_do_list/to-do-list/src/component/ToDoList.js"],"names":["React","ToDo","Component","ref","createRef","render","toDo","props","map","item","index","e","haveDone","change","isClick","title","remove","id","children","Done","done","doing","ToDoList","state","setToDo","localStorage","setItem","JSON","stringify","setDone","Date","now","code","target","value","length","alert","setState","getAttribute","console","log","text","doneChange","list","nodeName","parentNode","innerHTML","input","document","getElementById","focus","setSelectionRange","onblur","splice","getElementsByTagName","del","clean","componentDidMount","getItem","parse"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/ToDoList.css';\r\n\r\nclass ToDo extends React.Component {\r\n    ref = React.createRef();\r\n    render() {\r\n        let toDo = this.props.toDo;\r\n        toDo = toDo.map((item, index) => {\r\n            return (\r\n                <li\r\n                    key={item.id} className='to-do'>\r\n                    <input\r\n                        className='check-box'\r\n                        tindex={index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.haveDone(e) }} />\r\n                    <span\r\n                        className='span'\r\n                        // ref={this.input}\r\n                        onClick={(e) => { this.props.change(e) }}>\r\n                        {item.isClick ?\r\n                            <input\r\n                                index={index}\r\n                                id='input'\r\n                                defaultValue={item.title}\r\n                            />\r\n                            :\r\n                            <p\r\n                                index={index}>\r\n                                {item.title}\r\n                            </p>\r\n                        }\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        tindex={index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='do-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {toDo}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Done extends React.Component {\r\n    render() {\r\n        let done = this.props.done\r\n        done = done.map((item, index) => {\r\n            return (\r\n                <li key={item.id} className='done'>\r\n                    <input\r\n                        defaultChecked\r\n                        className='check-box'\r\n                        dindex={index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.doing(e) }} />\r\n                    <span\r\n                        className='span'\r\n                        onClick={(e) => { this.props.change(e) }}>\r\n                        <p\r\n                            index={index}>\r\n                            {item.title}\r\n                        </p>\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        defaultChecked='true'\r\n                        dindex={index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='done-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {done}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class ToDoList extends React.Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    state = {\r\n        toDo: [],\r\n        done: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\r\n            done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <span className='title'>ToDoList</span>\r\n                    <input\r\n                        placeholder='输入内容并按下回车添加ToDo'\r\n                        onKeyDown={(e) => { this.toDo(e) }} />\r\n                </header>\r\n                <main>\r\n                    <ToDo\r\n                        toDo={this.state.toDo}\r\n                        remove={this.remove}\r\n                        haveDone={this.haveDone}\r\n                        // ref={this.input}\r\n                        change={this.change}>\r\n                        <span>正在进行:</span>\r\n                        <span className='to-do-count'>{this.state.toDo.length}</span>\r\n                    </ToDo>\r\n                    <Done\r\n                        done={this.state.done}\r\n                        remove={this.remove}\r\n                        doing={this.doing}\r\n                        change={this.doneChange}>\r\n                        <span>已经完成:</span>\r\n                        <span className='done-count'>{this.state.done.length}</span>\r\n                    </Done>\r\n                </main>\r\n                <footer>\r\n                    <button\r\n                        className='clean'\r\n                        onClick={this.clean}>\r\n                        清除\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setToDo = () => {\r\n        localStorage.setItem('toDo', JSON.stringify(this.state.toDo))\r\n    }\r\n\r\n    setDone = () => {\r\n        localStorage.setItem('done', JSON.stringify(this.state.done))\r\n    }\r\n\r\n    // 添加进行的任务\r\n    toDo = (e) => {\r\n        let id = Date.now();\r\n        if (e.code === 'Enter') {\r\n            if (e.target.value.length === 0) {\r\n                alert('内容不能为空')\r\n            } else {\r\n                this.setState(\r\n                    {\r\n                        toDo: [{ id: id, title: e.target.value, isClick: false }, ...this.state.toDo]\r\n                    },\r\n                    () => {\r\n                        this.setToDo()\r\n                    }\r\n                )\r\n                e.target.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    // 修改进行中的内容\r\n    change = (e) => {\r\n        const index = e.target.getAttribute('index');\r\n        // let list = this;\r\n        console.log()\r\n        let text = this.state.toDo[index].title;\r\n        let id = this.state.toDo[index].id\r\n        this.state.toDo[index].isClick = !this.state.toDo[index].isClick;\r\n        // if (e.target && e.target.nodeName === 'P') {\r\n        //     e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\r\n        // }\r\n        // const input = document.getElementById('input');\r\n        // input.focus();\r\n        // input.setSelectionRange(0, input.value.length);\r\n        // input.onblur = function () {\r\n        //     if (input.value.length === 0) {\r\n        //         input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\r\n        //         alert(\"内容不能为空\");\r\n        //     }\r\n        //     else {\r\n        //         list.state.toDo.splice([index], 1, { id: id, title: input.value })\r\n        //         list.setState(\r\n        //             {\r\n        //                 toDo: list.state.toDo\r\n        //             },\r\n        //             () => {\r\n        //                 list.setToDo();\r\n        //             }\r\n        //         )\r\n        //         input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\r\n        //     }\r\n        // };\r\n    }\r\n\r\n    // 修改已完成的内容\r\n    doneChange = (e) => {\r\n        const index = e.target.getAttribute('index');\r\n        let list = this;\r\n        let text = this.state.done[index].title;\r\n        let id = this.state.done[index].id\r\n        if (e.target && e.target.nodeName === 'P') {\r\n            e.target.parentNode.innerHTML = \"<input  value=\" + text + \" index=\" + index + \" id='input'/>\";\r\n        }\r\n        const input = document.getElementById('input');\r\n        input.focus();\r\n        input.setSelectionRange(0, input.value.length);\r\n        input.onblur = function () {\r\n            if (input.value.length === 0) {\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + text + \"</p>\";\r\n                alert(\"内容不能为空\");\r\n            }\r\n            else {\r\n                list.state.done.splice([index], 1, { id: id, title: input.value })\r\n                list.setState(\r\n                    {\r\n                        done: list.state.done\r\n                    },\r\n                    () => {\r\n                        list.setDone();\r\n                    }\r\n                )\r\n                input.parentNode.innerHTML = \"<p index=\" + index + \" >\" + input.value + \"</p>\";\r\n            }\r\n        };\r\n    }\r\n\r\n    //从进行变成完成\r\n    haveDone = (e) => {\r\n        this.setState(\r\n            {\r\n                done: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.done],\r\n            },\r\n            () => {\r\n                this.setDone();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    // 从完成变成进行\r\n    doing = (e) => {\r\n        this.setState(\r\n            {\r\n                toDo: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.toDo],\r\n            },\r\n            () => {\r\n                this.setToDo();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    // 删除单个任务\r\n    remove = (e) => {\r\n        e.target.getAttribute('tindex') !== null ?\r\n            this.setState(\r\n                {\r\n                    del: this.state.toDo.splice(e.target.getAttribute('tindex'), 1)\r\n                },\r\n                () => {\r\n                    this.setToDo();\r\n                }\r\n            )\r\n            : this.setState(\r\n                {\r\n                    del: this.state.done.splice(e.target.getAttribute('dindex'), 1)\r\n                },\r\n                () => {\r\n                    this.setDone();\r\n                }\r\n            )\r\n    }\r\n\r\n    //清除所有任务\r\n    clean = () => {\r\n        localStorage.setItem('toDo', JSON.stringify([]));\r\n        localStorage.setItem('done', JSON.stringify([]));\r\n        this.setState({\r\n            toDo: [],\r\n            done: []\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}