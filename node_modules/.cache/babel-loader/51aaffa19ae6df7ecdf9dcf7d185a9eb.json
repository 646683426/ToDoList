{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vscode\\\\workspace\\\\to_do_list\\\\to-do-list\\\\src\\\\component\\\\ToDoList.js\";\nimport React from 'react';\nimport '../style/ToDoList.css';\n\nclass ToDo extends React.Component {\n  render() {\n    let toDo = this.props.toDo;\n    toDo = toDo.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"to-do\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check-box\",\n          tindex: index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.haveDone(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: item.isClick ? /*#__PURE__*/_jsxDEV(\"input\", {\n            index: index,\n            id: \"input\",\n            defaultValue: item.title,\n            autoFocus: true,\n            onBlur: e => {\n              this.props.onBlur(e, 'toDo');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: e => {\n              this.props.onClick(e, 'toDo');\n            },\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          tindex: index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"do-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: toDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Done extends React.Component {\n  render() {\n    let done = this.props.done;\n    done = done.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"done\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          className: \"check-box\",\n          dindex: index,\n          type: \"checkbox\",\n          onClick: e => {\n            this.props.doing(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          children: item.isClick ? /*#__PURE__*/_jsxDEV(\"input\", {\n            index: index,\n            id: \"input\",\n            defaultValue: item.title,\n            autoFocus: true,\n            onBlur: e => {\n              this.props.onBlur(e, 'done');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: e => {\n              this.props.onClick(e, 'done');\n            },\n            index: index,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          defaultChecked: \"true\",\n          dindex: index,\n          onClick: e => {\n            this.props.remove(e);\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"done-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.toDoRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      toDo: [],\n      done: []\n    };\n\n    this.setToDo = () => {\n      localStorage.setItem('toDo', JSON.stringify(this.state.toDo));\n    };\n\n    this.setDone = () => {\n      localStorage.setItem('done', JSON.stringify(this.state.done));\n    };\n\n    this.toDo = e => {\n      let id = Date.now();\n\n      if (e.code === 'Enter') {\n        if (e.target.value.length === 0) {\n          alert('内容不能为空');\n        } else {\n          this.setState({\n            toDo: [{\n              id: id,\n              title: e.target.value,\n              isClick: false\n            }, ...this.state.toDo]\n          }, () => {\n            this.setToDo();\n          });\n          e.target.value = '';\n        }\n      }\n    };\n\n    this.change = (e, list) => {\n      const index = e.target.getAttribute('index');\n\n      if (list === 'toDo') {\n        let toDo = this.state.toDo;\n        toDo[index].isClick = !toDo[index].isClick;\n        this.setState({\n          toDo: toDo\n        });\n      } else {\n        let done = this.state.done;\n        done[index].isClick = !done[index].isClick;\n        this.setState({\n          done: done\n        });\n      }\n    };\n\n    this.changeDone = (e, list) => {\n      const index = e.target.getAttribute('index');\n\n      if (list === 'toDo') {\n        list = this.state.toDo;\n      } else {\n        list = this.state.done;\n      } // if (list === 'toDo') {\n      //     let toDo = this.state.toDo;\n\n\n      let isClick = list[index].isClick;\n      let id = list[index].id;\n      let text;\n\n      if (e.target.value.length === 0) {\n        text = list[index].title;\n        alert('内容不能为空');\n        list.splice([index], 1, {\n          id: id,\n          title: text,\n          isClick: !isClick\n        });\n        this.setState({\n          toDo: list\n        });\n      } else {\n        text = e.target.value;\n        list.splice([index], 1, {\n          id: id,\n          title: text,\n          isClick: !isClick\n        });\n        this.setState({\n          toDo: toDo\n        }, () => {\n          this.setToDo();\n        });\n      } // } else {\n      //     let done = this.state.done;\n      //     let isClick = done[index].isClick;\n      //     let id = done[index].id;\n      //     let text;\n      //     if (e.target.value.length === 0) {\n      //         text = done[index].title;\n      //         alert('内容不能为空')\n      //         done.splice([index], 1, { id: id, title: text, isClick: !isClick })\n      //         this.setState({\n      //             done: done\n      //         })\n      //     } else {\n      //         text = e.target.value;\n      //         done.splice([index], 1, { id: id, title: text, isClick: !isClick })\n      //         this.setState(\n      //             {\n      //                 done: done\n      //             },\n      //             () => {\n      //                 this.setDone();\n      //             }\n      //         )\n      //     }\n      // }\n\n    };\n\n    this.haveDone = e => {\n      this.setState({\n        done: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.done]\n      }, () => {\n        this.setDone();\n      });\n      this.remove(e);\n    };\n\n    this.doing = e => {\n      this.setState({\n        toDo: [{\n          id: this.state.done.length,\n          title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML\n        }, ...this.state.toDo]\n      }, () => {\n        this.setToDo();\n      });\n      this.remove(e);\n    };\n\n    this.remove = e => {\n      e.target.getAttribute('tindex') !== null ? this.setState({\n        del: this.state.toDo.splice(e.target.getAttribute('tindex'), 1)\n      }, () => {\n        this.setToDo();\n      }) : this.setState({\n        del: this.state.done.splice(e.target.getAttribute('dindex'), 1)\n      }, () => {\n        this.setDone();\n      });\n    };\n\n    this.clean = () => {\n      localStorage.setItem('toDo', JSON.stringify([]));\n      localStorage.setItem('done', JSON.stringify([]));\n      this.setState({\n        toDo: [],\n        done: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    //在缓存中获取任务\n    this.setState({\n      toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\n      done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: \"ToDoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\\u5E76\\u6309\\u4E0B\\u56DE\\u8F66\\u6DFB\\u52A0ToDo\",\n          onKeyDown: e => {\n            this.toDo(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(ToDo, {\n          toDo: this.state.toDo,\n          remove: this.remove,\n          haveDone: this.haveDone,\n          onBlur: this.changeDone,\n          onClick: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6B63\\u5728\\u8FDB\\u884C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"to-do-count\",\n            children: this.state.toDo.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Done, {\n          done: this.state.done,\n          remove: this.remove,\n          doing: this.doing,\n          onBlur: this.changeDone,\n          onClick: this.change,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"done-count\",\n            children: this.state.done.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clean\",\n          onClick: this.clean,\n          children: \"\\u6E05\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  } //向浏览器缓存添加任务\n\n\n}","map":{"version":3,"sources":["D:/vscode/workspace/to_do_list/to-do-list/src/component/ToDoList.js"],"names":["React","ToDo","Component","render","toDo","props","map","item","index","e","haveDone","isClick","title","onBlur","onClick","remove","id","children","Done","done","doing","ToDoList","toDoRef","createRef","state","setToDo","localStorage","setItem","JSON","stringify","setDone","Date","now","code","target","value","length","alert","setState","change","list","getAttribute","changeDone","text","splice","parentNode","getElementsByTagName","innerHTML","del","clean","componentDidMount","getItem","parse"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/ToDoList.css';\r\n\r\nclass ToDo extends React.Component {\r\n    render() {\r\n        let toDo = this.props.toDo;\r\n        toDo = toDo.map((item, index) => {\r\n            return (\r\n                <li\r\n                    key={item.id} className='to-do'>\r\n                    <input\r\n                        className='check-box'\r\n                        tindex={index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.haveDone(e) }} />\r\n                    <span\r\n                        className='span'>\r\n                        {item.isClick ?\r\n                            <input\r\n                                index={index}\r\n                                id='input'\r\n                                defaultValue={item.title}\r\n                                autoFocus\r\n                                onBlur={(e) => { this.props.onBlur(e, 'toDo') }}\r\n                            />\r\n                            :\r\n                            <p\r\n                                onClick={(e) => { this.props.onClick(e, 'toDo') }}\r\n                                index={index}>\r\n                                {item.title}\r\n                            </p>\r\n                        }\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        tindex={index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='do-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {toDo}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Done extends React.Component {\r\n    render() {\r\n        let done = this.props.done\r\n        done = done.map((item, index) => {\r\n            return (\r\n                <li key={item.id} className='done'>\r\n                    <input\r\n                        defaultChecked\r\n                        className='check-box'\r\n                        dindex={index}\r\n                        type='checkbox'\r\n                        onClick={(e) => { this.props.doing(e) }} />\r\n                    <span\r\n                        className='span'>\r\n                        {item.isClick ?\r\n                            <input\r\n                                index={index}\r\n                                id='input'\r\n                                defaultValue={item.title}\r\n                                autoFocus\r\n                                onBlur={(e) => { this.props.onBlur(e, 'done') }}\r\n                            />\r\n                            :\r\n                            <p\r\n                                onClick={(e) => { this.props.onClick(e, 'done') }}\r\n                                index={index}>\r\n                                {item.title}\r\n                            </p>\r\n                        }\r\n                    </span>\r\n                    <button\r\n                        className='btn'\r\n                        defaultChecked='true'\r\n                        dindex={index}\r\n                        onClick={(e) => { this.props.remove(e) }}>\r\n                        -\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='done-content'>\r\n                <h2>\r\n                    {this.props.children}\r\n                </h2>\r\n                <ul>\r\n                    {done}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class ToDoList extends React.Component {\r\n\r\n    toDoRef = React.createRef();\r\n\r\n    state = {\r\n        toDo: [],\r\n        done: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        //在缓存中获取任务\r\n        this.setState({\r\n            toDo: localStorage.getItem('toDo') !== null ? JSON.parse(localStorage.getItem('toDo')) : [],\r\n            done: localStorage.getItem('done') !== null ? JSON.parse(localStorage.getItem('done')) : []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <span className='title'>ToDoList</span>\r\n                    <input\r\n                        placeholder='输入内容并按下回车添加ToDo'\r\n                        onKeyDown={(e) => { this.toDo(e) }} />\r\n                </header>\r\n                <main>\r\n                    <ToDo\r\n                        toDo={this.state.toDo}\r\n                        remove={this.remove}\r\n                        haveDone={this.haveDone}\r\n                        onBlur={this.changeDone}\r\n                        onClick={this.change}>\r\n                        <span>正在进行:</span>\r\n                        <span className='to-do-count'>{this.state.toDo.length}</span>\r\n                    </ToDo>\r\n                    <Done\r\n                        done={this.state.done}\r\n                        remove={this.remove}\r\n                        doing={this.doing}\r\n                        onBlur={this.changeDone}\r\n                        onClick={this.change}>\r\n                        <span>已经完成:</span>\r\n                        <span className='done-count'>{this.state.done.length}</span>\r\n                    </Done>\r\n                </main>\r\n                <footer>\r\n                    <button\r\n                        className='clean'\r\n                        onClick={this.clean}>\r\n                        清除\r\n                    </button>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //向浏览器缓存添加任务\r\n    setToDo = () => {\r\n        localStorage.setItem('toDo', JSON.stringify(this.state.toDo))\r\n    }\r\n\r\n    setDone = () => {\r\n        localStorage.setItem('done', JSON.stringify(this.state.done))\r\n    }\r\n\r\n    // 按下回车后，添加进行任务\r\n    toDo = (e) => {\r\n        let id = Date.now();\r\n        if (e.code === 'Enter') {\r\n            if (e.target.value.length === 0) {\r\n                alert('内容不能为空')\r\n            } else {\r\n                this.setState(\r\n                    {\r\n                        toDo: [{ id: id, title: e.target.value, isClick: false }, ...this.state.toDo]\r\n                    },\r\n                    () => {\r\n                        this.setToDo()\r\n                    }\r\n                )\r\n                e.target.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点击进行修改\r\n    change = (e, list) => {\r\n        const index = e.target.getAttribute('index');\r\n        if (list === 'toDo') {\r\n            let toDo = this.state.toDo;\r\n            toDo[index].isClick = !toDo[index].isClick;\r\n            this.setState({\r\n                toDo: toDo\r\n            })\r\n        } else {\r\n            let done = this.state.done;\r\n            done[index].isClick = !done[index].isClick;\r\n            this.setState({\r\n                done: done\r\n            })\r\n        }\r\n    }\r\n\r\n    //完成修改\r\n    changeDone = (e, list) => {\r\n        const index = e.target.getAttribute('index');\r\n        if(list==='toDo'){\r\n            list = this.state.toDo\r\n        }else{\r\n            list = this.state.done\r\n        }\r\n        // if (list === 'toDo') {\r\n        //     let toDo = this.state.toDo;\r\n            let isClick = list[index].isClick;\r\n            let id = list[index].id;\r\n            let text;\r\n            if (e.target.value.length === 0) {\r\n                text = list[index].title;\r\n                alert('内容不能为空')\r\n                list.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n                this.setState({\r\n                    toDo: list\r\n                })\r\n            } else {\r\n                text = e.target.value;\r\n                list.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n                this.setState(\r\n                    {\r\n                        toDo: toDo\r\n                    },\r\n                    () => {\r\n                        this.setToDo();\r\n                    }\r\n                )\r\n            }\r\n        // } else {\r\n        //     let done = this.state.done;\r\n        //     let isClick = done[index].isClick;\r\n        //     let id = done[index].id;\r\n        //     let text;\r\n        //     if (e.target.value.length === 0) {\r\n        //         text = done[index].title;\r\n        //         alert('内容不能为空')\r\n        //         done.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n        //         this.setState({\r\n        //             done: done\r\n        //         })\r\n        //     } else {\r\n        //         text = e.target.value;\r\n        //         done.splice([index], 1, { id: id, title: text, isClick: !isClick })\r\n        //         this.setState(\r\n        //             {\r\n        //                 done: done\r\n        //             },\r\n        //             () => {\r\n        //                 this.setDone();\r\n        //             }\r\n        //         )\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    //从进行变成完成\r\n    haveDone = (e) => {\r\n        this.setState(\r\n            {\r\n                done: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.done],\r\n            },\r\n            () => {\r\n                this.setDone();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    // 从完成变成进行\r\n    doing = (e) => {\r\n        this.setState(\r\n            {\r\n                toDo: [{ id: this.state.done.length, title: e.target.parentNode.getElementsByTagName('span')[0].getElementsByTagName('p')[0].innerHTML }, ...this.state.toDo],\r\n            },\r\n            () => {\r\n                this.setToDo();\r\n            }\r\n        )\r\n        this.remove(e);\r\n    }\r\n\r\n    // 删除单个任务\r\n    remove = (e) => {\r\n        e.target.getAttribute('tindex') !== null ?\r\n            this.setState(\r\n                {\r\n                    del: this.state.toDo.splice(e.target.getAttribute('tindex'), 1)\r\n                },\r\n                () => {\r\n                    this.setToDo();\r\n                }\r\n            )\r\n            : this.setState(\r\n                {\r\n                    del: this.state.done.splice(e.target.getAttribute('dindex'), 1)\r\n                },\r\n                () => {\r\n                    this.setDone();\r\n                }\r\n            )\r\n    }\r\n\r\n    //清除所有任务\r\n    clean = () => {\r\n        localStorage.setItem('toDo', JSON.stringify([]));\r\n        localStorage.setItem('done', JSON.stringify([]));\r\n        this.setState({\r\n            toDo: [],\r\n            done: []\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}